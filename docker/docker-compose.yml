services:
    app:
        build:
            context: ..
            dockerfile: docker/Dockerfile
            args:
                - APP_NAME=${APP_NAME:-laravel-app}
                - TZ=${TZ:-UTC}
        container_name: ${APP_NAME:-laravel-app}
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ../storage:/var/www/html/storage
            - ../bootstrap/cache:/var/www/html/bootstrap/cache
        environment:
            - APP_ENV=production
            - APP_DEBUG=false
            - APP_NAME=${APP_NAME:-laravel-app}
            - TZ=${TZ:-UTC}
            - DB_CONNECTION=pgsql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_DATABASE=${DB_DATABASE:-laravel}
            - DB_USERNAME=${DB_USERNAME:-laravel}
            - DB_PASSWORD=${DB_PASSWORD:-password}
            - QUEUE_CONNECTION=redis
            - REDIS_HOST=redis
            - INERTIA_SSR_ENABLED=true
            - INERTIA_SSR_URL=http://ssr:13714
        depends_on:
            - postgres
            - redis
            - ssr
        networks:
            - laravel-network

    queue:
        build:
            context: ..
            dockerfile: docker/Dockerfile
            args:
                - APP_NAME=${APP_NAME:-laravel-queue}
                - TZ=${TZ:-UTC}
        container_name: ${APP_NAME:-laravel-app}-queue
        command: php artisan queue:work --tries=3
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ../storage:/var/www/html/storage
        environment:
            - APP_ENV=production
            - APP_DEBUG=false
            - APP_NAME=${APP_NAME:-laravel-queue}
            - TZ=${TZ:-UTC}
            # Add all DB and Redis variables so the queue worker can connect
            - DB_CONNECTION=pgsql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_DATABASE=${DB_DATABASE:-laravel}
            - DB_USERNAME=${DB_USERNAME:-laravel}
            - DB_PASSWORD=${DB_PASSWORD:-password}
            - QUEUE_CONNECTION=redis
            - REDIS_HOST=redis
            - INERTIA_SSR_ENABLED=true
            - INERTIA_SSR_URL=http://ssr:13714
        depends_on:
            - postgres
            - redis
            - ssr
        networks:
            - laravel-network

    nginx:
        image: nginx:alpine
        container_name: ${APP_NAME:-laravel-app}-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ../public:/var/www/html/public:ro
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - app
        networks:
            - laravel-network

    ssr:
        build:
            context: ..
            dockerfile: docker/Dockerfile
            target: ssr-runtime
        container_name: ${APP_NAME:-laravel-app}-ssr
        restart: unless-stopped
        working_dir: /var/www/html
        environment:
            - NODE_ENV=production
            - PORT=13714
            - SSR_BASE_URL=http://nginx
        expose:
            - "13714"
        networks:
            - laravel-network

    postgres:
        image: postgres:15-alpine
        container_name: ${APP_NAME:-laravel-app}-postgres
        restart: unless-stopped
        environment:
            - POSTGRES_DB=${DB_DATABASE:-laravel}
            - POSTGRES_USER=${DB_USERNAME:-laravel}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - laravel-network

    redis:
        image: redis:7-alpine
        container_name: ${APP_NAME:-laravel-app}-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - laravel-network

volumes:
    postgres_data:
    redis_data:

networks:
    laravel-network:
        driver: bridge
